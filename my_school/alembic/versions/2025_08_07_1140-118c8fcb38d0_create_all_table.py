"""create all table

Revision ID: 118c8fcb38d0
Revises:
Create Date: 2025-08-07 11:40:38.374861

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "118c8fcb38d0"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "school_subjects",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_school_subjects")),
    )
    op.create_table(
        "students",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("surname", sa.String(length=150), nullable=False),
        sa.Column("year_of_birth", sa.Date(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_students")),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_table(
        "day_schools",
        sa.Column("day", sa.Date(), nullable=False),
        sa.Column("school_assessment", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=False),
        sa.Column("subject_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["students.id"],
            name=op.f("fk_day_schools_student_id_students"),
        ),
        sa.ForeignKeyConstraint(
            ["subject_id"],
            ["school_subjects.id"],
            name=op.f("fk_day_schools_subject_id_school_subjects"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_day_schools")),
    )
    op.create_table(
        "students_object_table",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=False),
        sa.Column("school_subject_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["school_subject_id"],
            ["school_subjects.id"],
            name=op.f(
                "fk_students_object_table_school_subject_id_school_subjects"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["students.id"],
            name=op.f("fk_students_object_table_student_id_students"),
        ),
        sa.PrimaryKeyConstraint(
            "id",
            "student_id",
            "school_subject_id",
            name=op.f("pk_students_object_table"),
        ),
        sa.UniqueConstraint(
            "student_id", "school_subject_id", name="uniq_student_subject"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("students_object_table")
    op.drop_table("day_schools")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_table("students")
    op.drop_table("school_subjects")
    # ### end Alembic commands ###
